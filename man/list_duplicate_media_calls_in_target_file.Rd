% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_duplicate_media_calls_in_target_file.r
\name{list_duplicate_media_calls_in_target_file}
\alias{list_duplicate_media_calls_in_target_file}
\title{List All Duplicate Media File References Found in Target File}
\usage{
list_duplicate_media_calls_in_target_file(
  target_file,
  media_extensions = c("gif", "mp4", "mov", "png", "jpeg", "jpg", "svg", "webp", "avi",
    "wmv", "mp3", "wav"),
  print_output = TRUE,
  save_to_file = NULL,
  append = FALSE,
  add_section_header = NULL,
  show_line_numbers = FALSE,
  show_usage_count = TRUE,
  minimum_duplicates = 2
)
}
\arguments{
\item{target_file}{Character string specifying the path to the file to be analyzed.
File can be any text-based format (Rmd, md, qmd, txt, html, etc.).}

\item{media_extensions}{Character vector of media file extensions to search for.
Default is c("gif", "mp4", "mov", "png", "jpeg", "jpg", "svg", "webp", "avi", "wmv", "mp3", "wav").
Extensions are matched case-insensitively.}

\item{print_output}{Logical. If TRUE (default), prints the found duplicate media references to console.
If FALSE, suppresses console output.}

\item{save_to_file}{Character string specifying filename to save output, or NULL (default)
for no file output. If specified, the list of duplicate media references will be written to this file.}

\item{append}{Logical. If TRUE, appends to existing file. If FALSE (default),
overwrites existing file. Only used when save_to_file is not NULL.}

\item{add_section_header}{Character string to add as a header in the output file,
or NULL (default) for no header. Only used when save_to_file is not NULL.}

\item{show_line_numbers}{Logical. If TRUE, shows the line numbers where each duplicate
media reference was found. If FALSE (default), shows only the media paths.}

\item{show_usage_count}{Logical. If TRUE (default), shows how many times each duplicate
media file is referenced. If FALSE, shows only the file paths.}

\item{minimum_duplicates}{Integer. Minimum number of duplicates required to be reported.
Default is 2 (files referenced at least twice). Set to 3 or higher to focus on heavily duplicated content.}
}
\value{
Character vector containing media file references that appear multiple times
in the target file. Returns character(0) if no duplicates are found.
When \code{print_output = FALSE}, returns a named character vector where names
indicate the usage count.
}
\description{
This function reads a target file and identifies duplicate media file references, helping to
optimize content by revealing repeated usage of the same media assets. The function searches
for various media types (images, videos, audio) and reports which files are referenced
multiple times. This is particularly useful for presentations, documentation, and web content
where duplicate media references can impact performance and maintenance.
}
\details{
The function searches through each line of the target file using regular expressions
to identify media file references across various formats including markdown syntax,
HTML tags, and plain file paths. It then identifies which media files appear multiple
times in the document.

This analysis is particularly valuable for:
\itemize{
\item Optimizing presentation file sizes by identifying redundant media
\item Cleaning up documentation with repeated images
\item Performance analysis of web content
\item Media asset management and organization
\item Identifying frequently used branding elements
}

The function handles various reference formats including:
\itemize{
\item Markdown: \code{![alt](path/image.png)}
\item HTML: \code{<img src="path/image.png">}
\item Direct paths: \code{path/video.mp4}
\item URLs: \code{https://example.com/media.gif}
}
}
\examples{
\dontrun{
# Basic usage - find duplicate media in a presentation
list_duplicate_media_calls_in_target_file("sample-slides.qmd")

# Show line numbers and usage counts
list_duplicate_media_calls_in_target_file("presentation.rmd",
                                     show_line_numbers = TRUE,
                                     show_usage_count = TRUE)

# Focus on heavily duplicated content (3+ references)
list_duplicate_media_calls_in_target_file("slides.qmd", minimum_duplicates = 3)

# Search specific media types only
list_duplicate_media_calls_in_target_file("document.md",
                                     media_extensions = c("png", "jpg", "gif"))

# Save detailed report to file
list_duplicate_media_calls_in_target_file("slides.qmd",
                                     save_to_file = "duplicate-media-report.txt",
                                     add_section_header = "Media Optimization Report",
                                     show_usage_count = TRUE)

# Get results for programmatic analysis
duplicates <- list_duplicate_media_calls_in_target_file("presentation.qmd",
                                                  print_output = FALSE)

# Analyze duplicate patterns
heavy_duplicates <- list_duplicate_media_calls_in_target_file("slides.qmd",
                                                        minimum_duplicates = 4,
                                                        print_output = FALSE)

# Check for specific file types with high duplication
gif_duplicates <- list_duplicate_media_calls_in_target_file("presentation.qmd",
                                                      media_extensions = "gif",
                                                      print_output = FALSE)
}

}
\seealso{
\code{\link{list_image_calls_in_target_file}} for listing all image references,
\code{\link{list_gif_calls_in_target_file}} for GIF-specific analysis
}
