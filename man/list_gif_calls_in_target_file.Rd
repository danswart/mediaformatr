% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_gif_calls_in_target_file.r
\name{list_gif_calls_in_target_file}
\alias{list_gif_calls_in_target_file}
\title{List All GIF File References Found in Target File}
\usage{
list_gif_calls_in_target_file(
  target_file,
  print_output = TRUE,
  save_to_file = NULL,
  append = FALSE,
  add_section_header = NULL,
  show_line_numbers = FALSE,
  case_sensitive = FALSE
)
}
\arguments{
\item{target_file}{Character string specifying the path to the file to be analyzed.
File can be any text-based format (Rmd, md, qmd, txt, html, etc.).}

\item{print_output}{Logical. If TRUE (default), prints the found GIF references to console.
If FALSE, suppresses console output.}

\item{save_to_file}{Character string specifying filename to save output, or NULL (default)
for no file output. If specified, the list of GIF references will be written to this file.}

\item{append}{Logical. If TRUE, appends to existing file. If FALSE (default),
overwrites existing file. Only used when save_to_file is not NULL.}

\item{add_section_header}{Character string to add as a header in the output file,
or NULL (default) for no header. Only used when save_to_file is not NULL.}

\item{show_line_numbers}{Logical. If TRUE, shows the line number where each GIF
reference was found. If FALSE (default), shows only the GIF paths.}

\item{case_sensitive}{Logical. If TRUE, searches for ".gif" extension with exact case.
If FALSE (default), matches ".gif", ".GIF", ".Gif", etc.}
}
\value{
Character vector containing all GIF file references found in the target file,
in the order they were encountered. Returns character(0) if no GIFs are found.
}
\description{
This function reads a target file and extracts all GIF file references found within the content.
The GIF file paths are returned exactly as they appear in the source file, with no modifications
or transformations applied. Results can be displayed in the console and optionally saved to a file.
This function is specifically designed to inventory GIF usage in presentations, documentation,
and other markdown-based content.
}
\details{
The function searches through each line of the target file using regular expressions
to identify GIF file references. It looks for any text pattern that ends with the
.gif extension, regardless of the surrounding syntax (markdown, HTML, file paths, etc.).

Duplicate GIF references are preserved in the output to show the actual frequency
of usage in the source file. This is particularly useful for presentations where
the same GIF might be referenced multiple times. If you need unique references only,
apply \code{unique()} to the returned vector.

The function is particularly useful for:
\itemize{
\item Inventorying animated content in presentations
\item Checking for broken GIF links before publishing
\item Analyzing media usage patterns in documentation
\item Preparing media asset lists for deployment
}
}
\examples{
\dontrun{
# Basic usage - list GIFs found in a presentation file
list_gif_calls_in_target_file("sample-slides.qmd")

# Show line numbers where GIFs are found
list_gif_calls_in_target_file("presentation.rmd", show_line_numbers = TRUE)

# Save results to file with custom header
list_gif_calls_in_target_file("slides.qmd",
                               save_to_file = "gif-inventory.txt",
                               add_section_header = "Animated Content Inventory")

# Case-sensitive search for exact ".gif" extension
list_gif_calls_in_target_file("document.md", case_sensitive = TRUE)

# Get results without console output for programmatic use
gif_refs <- list_gif_calls_in_target_file("sample-slides.qmd",
                                           print_output = FALSE)

# Get unique GIF references only
unique_gifs <- unique(list_gif_calls_in_target_file("slides.qmd",
                                                    print_output = FALSE))

# Check if specific GIFs are used
all_gifs <- list_gif_calls_in_target_file("presentation.qmd", print_output = FALSE)
large_gifs <- grep("large|big", all_gifs, value = TRUE)
}

}
\seealso{
\code{\link{list_image_calls_in_target_file}} for listing all image references
}
